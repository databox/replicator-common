name: Version Bump Check

on:
  push:
    branches:
      - master
    paths:
      - 'packages/**'

jobs:
  check-version-bump:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for Lerna to detect changes

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.10'

      - name: Install dependencies
        run: |
          npm install -g lerna
          npm ci

      - name: Get changed packages
        id: changed-packages
        run: |
          # Get list of changed packages
          PACKAGES=$(lerna ls --since origin/master~1 --json)
          echo "packages=$PACKAGES" >> $GITHUB_OUTPUT

      - name: Check version bumps
        if: steps.changed-packages.outputs.packages != '[]' && steps.changed-packages.outputs.packages != ''
        run: |
          # Function to compare versions
          version_gt() {
            test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1";
          }

          # Parse the JSON output and check each changed package
          echo '${{ steps.changed-packages.outputs.packages }}' | jq -c '.[]' | while read -r package; do
            NAME=$(echo $package | jq -r '.name')
            CURRENT_VERSION=$(echo $package | jq -r '.version')
            LOCATION=$(echo $package | jq -r '.location')
            
            # Get the previous version from git history
            PREV_VERSION=$(git show origin/master:$LOCATION/package.json | jq -r '.version')
            
            echo "Checking $NAME"
            echo "Current version: $CURRENT_VERSION"
            echo "Previous version: $PREV_VERSION"
            
            # Compare versions
            if ! version_gt "$CURRENT_VERSION" "$PREV_VERSION"; then
              echo "::error::Package $NAME has changes but version was not bumped (current: $CURRENT_VERSION, previous: $PREV_VERSION)"
              exit 1
            fi
            
            echo "âœ“ Version bump verified for $NAME ($PREV_VERSION -> $CURRENT_VERSION)"
          done

      - name: Summary
        run: |
          echo "All changed packages have appropriate version bumps! ðŸŽ‰" 